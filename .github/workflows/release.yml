name: Release (Briefcase)
on:
  push:
    tags:
      - '*'  # Run on any tag

permissions:
  contents: write

env:
  FORCE_COLOR: "1"

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build and Package (${{ matrix.os }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: Windows
            runs-on: windows-latest
            platform: Windows
            output-format: app
            package-args: ""
          - os: macOS
            runs-on: macos-latest
            platform: macOS
            output-format: app
            package-args: "--adhoc-sign"
          - os: Linux
            runs-on: ubuntu-latest
            platform: Linux
            output-format: AppImage
            package-args: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Build and Package
        run: |
          briefcase create ${{ matrix.platform }} ${{ matrix.output-format }} --no-input --log
          briefcase build  ${{ matrix.platform }} ${{ matrix.output-format }} --no-input --log
          briefcase package ${{ matrix.platform }} ${{ matrix.output-format }} --no-input --log ${{ matrix.package-args }}

      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist
          if-no-files-found: error

  release:
    name: Create GitHub Release and Upload Assets
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all dists
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Display collected files
        run: ls -R artifacts || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: |
            artifacts/**/*.dmg
            artifacts/**/*.msi
            artifacts/**/*.exe
            artifacts/**/*.pkg
            artifacts/**/*.app.zip
            artifacts/**/*.AppImage
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
          generate_release_notes: true
          prerelease: ${{ contains(github.ref_name, '-') }}